@startuml

package javaFX {
  class TextField {
    -text : String
    +TextField()
    +TextField(String)
    +setText(String)
    +setOnAction(EventHandler)
  }

  class CheckBox {
    -isChecked : boolean

    +CheckBox()
    +CheckBox(String)
    +setSelected(boolean)
    +fire()
    +isSelected()
    +setOnAction(EventHandler)
  }
}

package MVC {
  interface Model {
    addObservator(Observator)
    deleteObservator(Observator)
    updateObservator()
  }

  interface Observator {
    update(Model)
  }
}

package Task {

  class Task implements MVC.Model{
    -name : string
    -description : string
    -isArchive : boolean
    -collaborators : arrayList<String>
    -dependencies : arrayList<Task>
    -{static} allTasks : list<Task>
    +Task() //taskId = ++maxId && add it to "allTask"
    +Task(String) //taskId = ++maxId && add it to "allTask"
    +Task(String, String) //taskId = ++maxId && add it to "allTask"
    +{static}getTaskById(int) : Task

    +addSubTask(Task)
    +deleteSubTask(Task)
    +getSubTasks()

    +addDependencie(Task)
    +deleteDependencie(Task)
    +getDependencies()

    +[getter]()
  }

  class TaskList implements MVC.Model {
    -name : String
    -isArchived : boolean
    +addTask(Task)
    +deleteTask(Task)
    +isEmpty()

    +[getter]()
  }

  class TaskNameObs extends javaFX.TextField implements MVC.Observator {

  }

  class TaskDescObs extends javaFX.TextField implements MVC.Observator {

  }

  class TaskArchiveObs extends javaFX.CheckBox implements MVC.Observator {

  }

  class TaskCollaboratorsObs extends javaFX.HBox implements MVC.Observator {

  }

  class TaskDependenciesObs extends javaFX.HBox implements MVC.Observator {

  }


  class TaskListNameObs extends javaFX.TextField implements MVC.Observator {

  }

  class TaskListArchiveObs extends javaFX.CheckBox implements MVC.Observator {

  }

  Task "*" <-up- "1" Task : parentTask
  Task "*" <-- "1" TaskList : parentTaskList
  Task o-- Task : subTasks
  Task "*" <-- "*" MVC.Observator : observators

  TaskList o-- Task : tasks
  TaskList "*" <-- "*" MVC.Observator : observators
}

@enduml