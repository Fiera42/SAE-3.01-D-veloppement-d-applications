@startuml

package javaFX {
  class BorderPane {
    BorderPane()
    setTop(Node)
    setCenter(Node)
    setLeft(Node)
    setRight(Node)
    setBottom(Node)
  }
}

package java {
  interface Iterable<T> {
    iterator() : Iterator<T>
  }
}

package MVC {
  interface Model {
    addObservator(Observator)
    deleteObservator(Observator)
    updateObservator()
  }

  interface Observator {
    update(Model)
  }
}

package Task {

  class TaskList implements java.Iterable, MVC.Model {
    -name : String
    -isArchived : boolean
    +addTask(Task)
    +deleteTask(Task)
    +isEmpty()

    +[getter]()
  }
}
package App {
  class Treulo implements MVC.Model{
    -displayArchive : boolean
    -displayMode : String
    -editedTaskList : TaskList
    +loadFile(String fileName)
    +saveAsFile(String fileName)
    +exportAsImage(String fileName)
    +[getter]()
  }

  Treulo "1" <-- "*" MVC.Observator : observators
  Treulo "1" <-- "*" Task.TaskList : Tasks

  class AppView extends javaFX.BorderPane implements MVC.Observator {
    "//update use DisplayFactory.getDisplayFactory()\nto display the tasks"
  }
}

@enduml