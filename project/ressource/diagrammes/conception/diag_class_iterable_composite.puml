@startuml

package java {
  interface Iterable<T> {
    iterator() : Iterator<T>
  }
}

package Task {

  class Task {
    -name : string
    -description : string
    -isArchive : boolean
    -collaborators : arrayList<String>
    -dependencies : arrayList<Task>
    -{static} allTasks : list<Task>
    +Task() //taskId = ++maxId && add it to "allTask"
    +Task(String) //taskId = ++maxId && add it to "allTask"
    +Task(String, String) //taskId = ++maxId && add it to "allTask"
    +{static}getTaskById(int) : Task

    +addSubTask(Task)
    +deleteSubTask(Task)
    +getSubTasks()

    +addDependencie(Task)
    +deleteDependencie(Task)
    +getDependencies()

    +[getter]()
  }

  class TaskList implements java.Iterable {
    -name : String
    -isArchived : boolean
    +addTask(Task)
    +deleteTask(Task)
    +isEmpty()

    +[getter]()
  }

  Task "*" <-up- "1" Task : parentTask
  Task "*" <-- "1" TaskList : parentTaskList
  Task o-- Task : subTasks

  TaskList o-- Task : tasks
}

@enduml